<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-sftp="http://www.springframework.org/schema/integration/sftp"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:xsd/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context classpath:xsd/spring-context-4.0.xsd
		http://www.springframework.org/schema/integration/sftp   classpath:xsd/spring-integration-sftp.xsd
		http://www.springframework.org/schema/util classpath:xsd/spring-util-3.0.xsd">

 	 <context:property-placeholder
		ignore-resource-not-found="true"
		location="file:${PATH_PROPERTIES_INTEGRATOR}/ConfiguracionFTP/ConfiguracionFTP.properties" />	
	<bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"  lazy-init="false">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>file:${PATH_PROPERTIES_INTEGRATOR}/ConfiguracionFTP/ConfiguracionFTP-log4j.xml</value>
			</list>
		</property>
	</bean> 
	<!-- <context:property-placeholder
		ignore-resource-not-found="true"
		location="file:/u01/Admin/applications/config/CO_FINEQUIPOS_OSB_PR/config/ConfiguracionFTP/ConfiguracionFTP.properties" /> -->
	<bean id="ftpClientFactoryAscardo" class="org.springframework.integration.sftp.session.DefaultSftpSessionFactory">	
		<property name="host" value="${ftpAscard.host}"/>
		<property name="port" value="${ftpAscard.port}"/>
		<property name="user" value="${ftpAscard.username}"/>	
		<property name="password" value="${ftpAscard.password}"/>
		<property name="serverAliveCountMax" value="2"/>
		<property name="serverAliveInterval" value="300000"/>
		<property name="allowUnknownKeys" value="true" />
	</bean>
	<bean id="csfAscardo" 	class="org.springframework.integration.file.remote.session.CachingSessionFactory">
		<constructor-arg ref="ftpClientFactoryAscardo" />			
		<constructor-arg value="${ftpAscard.maxConnection}" />
		<property name="poolSize" value="${ftpAscardOutbound.sessionCacheSize}" />
		<property name="sessionWaitTimeout" value="${ftpAscardOutbound.sessionWaitTimeout}" />
	</bean>	
	<!-- BATCH ACTIVACIONES -->
	<int-sftp:inbound-channel-adapter id="ftpInboundActiacionesASCARD"
				channel="ftpGetChannelActivacionesASCARD"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpActivaciones.localprocess}">
		<int:poller cron="${ftpActivaciones.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelActivacionesASCARD">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundActivacionesASCARD"
				channel="ftpGetChannelActivacionesASCARD"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" error-channel="failedChannelAscardOutBound" />		
	</int-sftp:outbound-channel-adapter>	
	<!-- BATCH CAMPANA FACTURACION -->
	<int-sftp:inbound-channel-adapter id="ftpInboundCFinanciacionASCARD"
				channel="ftpGetChannelCFinanciacionASCARD"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpCFacturacion.localprocess}">
		<int:poller cron="${ftpCFacturacion.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelCFinanciacionASCARD">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundCFinanciacionASCARD"
				channel="ftpGetChannelCFinanciacionASCARD"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>	
	<!-- BATCH NODEVADES NO MONETARIAS -->
	<int-sftp:inbound-channel-adapter id="ftpInboundNNmonetariasASCARD"
				channel="ftpGetChannelNNmonetariasASCARD"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpNNMonetarias.localprocess}">
		<int:poller cron="${ftpNNMonetarias.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelNNmonetariasASCARD">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundNNmonetariasASCARD"
				channel="ftpGetChannelNNmonetariasASCARD"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>
	<!-- BATCH RECAUDOS BANCOS -->
	<int-sftp:inbound-channel-adapter id="ftpInboundRBancosASCARD"
				channel="ftpGetChannelRBancosASCARD"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpRecaudoBancos.localprocess}">
		<int:poller cron="${ftpRecaudoBancos.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelRBancosASCARD">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundRBancosASCARD"
				channel="ftpGetChannelRBancosASCARD"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>
	<!-- BATCH RECAUDOS SICACOM -->
	<int-sftp:inbound-channel-adapter id="ftpInboundRecaudoSicacomASCARD"
				channel="ftpGetChannelRecaudoSicacomASCARD"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpReacudoSicacom.localprocess}">
		<int:poller cron="${ftpReacudoSicacom.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelRecaudoSicacomASCARD">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundRecaudoSicacomASCARD"
				channel="ftpGetChannelRecaudoSicacomASCARD"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>
	<!-- BATCH RECAUDOS BANCOS Y PAGOS EN LINEA RR -->
	<int-sftp:inbound-channel-adapter id="ftpInboundRecaudoRRASCARD"
		channel="ftpGetChannelRecaudoRRASCARD" session-factory="csfAscardo"
		filename-pattern="*.NOPROCESSXX"
		remote-directory="${ftpAscard.remotedirectoryOutbound}"
		local-directory="${ftpRecaudoRR.localprocess}">
		<int:poller cron="${ftpRecaudoRR.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelRecaudoRRASCARD">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundRecaudoRRASCARD"
				channel="ftpGetChannelRecaudoRRASCARD"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>
	<!-- BATCH PAGOS NO ABONADOS -->
	<int-sftp:inbound-channel-adapter id="ftpInboundPagosNoAbonados"
				channel="ftpGetChannelPagosNoAbonados"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpPagosNoAbonados.localprocess}">
		<int:poller cron="${ftpPagosNoAbonados.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelPagosNoAbonados">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundPagosNoAbonados"
				channel="ftpGetChannelPagosNoAbonados"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>
	<!-- BATCH SALDOS A FAVOR -->
	<int-sftp:inbound-channel-adapter id="ftpInboundSaldosAFavorAscardo"
				channel="ftpGetChannelSaldosAFavorAscardo"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpSaldosaFavorClaro.localprocess}">
		<int:poller cron="${ftpSaldosaFavorClaro.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelSaldosAFavorAscardo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundSaldosAFavorAscardo"
				channel="ftpGetChannelSaldosAFavorAscardo"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>
	<!-- BATCH AJUSTES ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundAjustesClaroAscardo"
				channel="ftpGetChannelAjustesClaroAscardo"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpAjustesAscard.localprocess}">
		<int:poller cron="${ftpAjustesAscard.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelAjustesClaroAscardo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundAjustesClaroAscardo"
				channel="ftpGetChannelAjustesClaroAscardo"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>
	<!-- BATCH ANULACION BANCOS ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundAnulacionBancosAscardo"
				channel="ftpGetChannelAnulacionBancosAscardo"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpAnulacionBancos.localprocess}">
		<int:poller cron="${ftpAnulacionBancos.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelAnulacionBancosAscardo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundAnulacionBancosAscardo"
				channel="ftpGetChannelAnulacionBancosAscardo"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>	
	<!-- BATCH ANULACION SICACOM ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundAnulacionSICACOMAscardo"
				channel="ftpGetChannelAnulacionSICACOMAscardo"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpAnulacionSICACOM.localprocess}">
		<int:poller cron="${ftpAnulacionSICACOM.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelAnulacionSICACOMAscardo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundAnulacionSICACOMAscardo"
				channel="ftpGetChannelAnulacionSICACOMAscardo"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>
	<!-- BATCH ANULACION RECAUDO RR ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundAnulacionRecaudoRRAscardo"
				channel="ftpGetChannelAnulacionRecaudoRRAscardo"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpAnulacionRecaudoRR.localprocess}">
		<int:poller cron="${ftpAnulacionRecaudoRR.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelAnulacionRecaudoRRAscardo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundAnulacionRecaudoRRAscardo"
				channel="ftpGetChannelAnulacionRecaudoRRAscardo"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>	
	<!-- BATCH ACELARION -->
	<int-sftp:inbound-channel-adapter id="ftpInboundAcelarionAscardo"
				channel="ftpGetChannelAcelarionAscardo"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpAceleracion.localprocess}">
		<int:poller cron="${ftpAceleracion.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelAcelarionAscardo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundAcelarionAscardo"
				channel="ftpGetChannelAcelarionAscardo"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>
 	<!-- BATCH NOVEDADES NO MONETARIAS V2 --> 
	<int-sftp:inbound-channel-adapter id="ftpInboundNovedadesNoMonetariasv2Ascardo"
				channel="ftpGetChannelNovedadesNoMonetariasv2Ascardo"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpNovedadesNoMonetariasv2.localprocess}">
		<int:poller cron="${ftpNovedadesNoMonetariasv2.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelNovedadesNoMonetariasv2Ascardo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundNovedadesNoMonetariasv2Ascardo"
				channel="ftpGetChannelNovedadesNoMonetariasv2Ascardo"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>	
	 <!-- BATCH BATCH REAPERTURA CREDITO CIERRE DE OBLIGACIONES  -->
	<int-sftp:inbound-channel-adapter id="ftpInboundReaperturaCreditoCierreOblAscardo"
				channel="ftpGetChannelReaperturaCreditoCierreOblAscardo"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpReaperturaCreditoCierreObl.localprocess}">
		<int:poller cron="${ftpReaperturaCreditoCierreObl.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelReaperturaCreditoCierreOblAscardo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundReaperturaCreditoCierreOblAscardo"
				channel="ftpGetChannelReaperturaCreditoCierreOblAscardo"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>	
	
	 <!-- BATCH CICLOS DE FACTURACION  -->
	<int-sftp:inbound-channel-adapter id="ftpInboundCiclosFacturacionAscardo"
				channel="ftpGetChannelCiclosFacturacionAscardo"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpCiclosFacturacion.localprocess}">
		<int:poller cron="${ftpCiclosFacturacion.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelCiclosFacturacionAscardo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundCiclosFacturacionAscardo"
				channel="ftpGetChannelCiclosFacturacionAscardo"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>	
	
	<!-- BATCH CAMBIO TASAS INTERES  -->
	<int-sftp:inbound-channel-adapter id="ftpInboundCambioTasasInteresAscardo"
				channel="ftpGetChannelCambioTasasInteresAscardo"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpCambioTasasInteres.localprocess}">
		<int:poller cron="${ftpCambioTasasInteres.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelCambioTasasInteresAscardo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundCambioTasasInteresAscardo"
				channel="ftpGetChannelCambioTasasInteresAscardo"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>
	
	<!-- BATCH CARGUE MASIVO  -->
	<int-sftp:inbound-channel-adapter id="ftpInboundCargueMasivoAscardo"
				channel="ftpGetChannelCargueMasivoAscardo"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpCargueMasivo.localprocess}">
		<int:poller cron="${ftpCargueMasivo.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelCargueMasivoAscardo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundCargueMasivoAscardo"
				channel="ftpGetChannelCargueMasivoAscardo"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>
	
	<!-- BATCH CREDITOS CASTIGADOS  -->
	<int-sftp:inbound-channel-adapter id="ftpInboundCreditosCastigadosAscardo"
				channel="ftpGetChannelCreditosCastigadosAscardo"
				session-factory="csfAscardo"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				local-directory="${ftpCreditosCastigados.localprocess}">
		<int:poller cron="${ftpCreditosCastigados.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelCreditosCastigadosAscardo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundCreditosCastigadosAscardo"
				channel="ftpGetChannelCreditosCastigadosAscardo"				
				remote-directory="${ftpAscard.remotedirectoryOutbound}"				
				session-factory="csfAscardo"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>

    <!-- BATCH APERTURA CREDITOS CASTIGADOS  -->
    <int-sftp:inbound-channel-adapter id="ftpInboundAperturaCreditosCastigadosAscardo"
                            channel="ftpGetChannelAperturaCreditosCastigadosAscardo"
                            session-factory="csfAscardo"    
                            filename-pattern="*.NOPROCESSXX"                
                            remote-directory="${ftpAscard.remotedirectoryOutbound}"                         
                            local-directory="${ftpAperturaCreditosCastigados.localprocess}">
            <int:poller cron="${ftpAperturaCreditosCastigados.cronExpressionOutbound}" max-messages-per-poll="-1"/>                 
    </int-sftp:inbound-channel-adapter>
    <int:channel id="ftpGetChannelAperturaCreditosCastigadosAscardo">
            <int:queue />
    </int:channel>
    <int-sftp:outbound-channel-adapter  id="ftpOutboundAperturaCreditosCastigadosAscardo"
                            channel="ftpGetChannelAperturaCreditosCastigadosAscardo"                                
                            remote-directory="${ftpAscard.remotedirectoryOutbound}"                         
                            session-factory="csfAscardo"                            
                            order="1" >     
            <int-sftp:request-handler-advice-chain>
                    <int:retry-advice />
                     <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
                            <property name="onSuccessExpression" value="payload.delete()" />
             </bean>                        
            </int-sftp:request-handler-advice-chain>        
            <int:poller fixed-rate="1000" max-messages-per-poll="-1" />             
    </int-sftp:outbound-channel-adapter>

    <!-- BATCH Auditoria SOX INI -->
    <int-sftp:inbound-channel-adapter id="ftpInboundAuditoriaSOXAscardo"
        channel="ftpGetChannelAuditoriaSOXAscardo"
        session-factory="csfAscardo"	
        filename-pattern="*.NOPROCESSXX"		
        remote-directory="${ftpAscard.remotedirectoryOutbound}"				
        local-directory="${ftpAuditoriaSOXin.localprocess}">
        <int:poller cron="${ftpAuditoriaSOXin.cronExpressionOutbound}" max-messages-per-poll="-1"/>			
    </int-sftp:inbound-channel-adapter>
    <int:channel id="ftpGetChannelAuditoriaSOXAscardo">
        <int:queue />
    </int:channel>
    <int-sftp:outbound-channel-adapter  id="ftpOutboundAuditoriaSOXAscardo"
        channel="ftpGetChannelAuditoriaSOXAscardo"				
        remote-directory="${ftpAscard.remotedirectoryOutbound}"				
        session-factory="csfAscardo"				
        order="1" >	
        <int-sftp:request-handler-advice-chain>
            <int:retry-advice />
            <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
                <property name="onSuccessExpression" value="payload.delete()" />
            </bean>			
        </int-sftp:request-handler-advice-chain>	
        <int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
    </int-sftp:outbound-channel-adapter>

	<!-- recovery log-->
	<int:channel id="failedChannelAscardOutBound" />
	<int:chain input-channel="failedChannelAscardOutBound">
		<int:transformer expression="'permanently failed:' + payload.failedMessage " />		
	</int:chain>
	<!-- Default retry advice 3 tries, no backoff, no recovery;
	     final failure will go to poller's error channel -->
	<beans profile="default">
		<int:handler-retry-advice id="retryAdviceAscardOutBound" />
	</beans>
	<!-- Retry advice, template with default 3 tries, exponential backoff, no recovery;
	     final failure will go to poller's error channel -->
	<beans profile="backoff">
		<int:handler-retry-advice id="retryAdviceAscardOutBound">
			<int:exponential-back-off initial="2000" multiplier="2" />
		</int:handler-retry-advice>
	</beans>
	<!-- Retry advice, template with default 3 tries, no backoff, recovery;
	     final handled by recovery instead of going to the poller's error channel -->
	<beans profile="recovery">
		<int:handler-retry-advice id="retryAdviceAscardOutBound" recovery-channel="recoveryChannelAscardOutBound" />

		<int:channel id="recoveryChannelAscardOutBound" />

		<int:chain input-channel="recoveryChannelAscardOutBound">
			<int:transformer expression="'permanently failed:' + '${payload.failedMessage.payload}' + ' handled by recovery'" />			
		</int:chain>
	</beans>
</beans>