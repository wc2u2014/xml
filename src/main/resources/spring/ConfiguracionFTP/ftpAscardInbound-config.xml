<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-sftp="http://www.springframework.org/schema/integration/sftp"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:xsd/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context classpath:xsd/spring-context-4.0.xsd
		http://www.springframework.org/schema/integration/sftp   classpath:xsd/spring-integration-sftp.xsd
		http://www.springframework.org/schema/util classpath:xsd/spring-util-3.0.xsd">

	 <context:property-placeholder
		ignore-resource-not-found="true"
		location="file:${PATH_PROPERTIES_INTEGRATOR}/ConfiguracionFTP/ConfiguracionFTP.properties" />
		
	<bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"  lazy-init="false">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>file:${PATH_PROPERTIES_INTEGRATOR}/ConfiguracionFTP/ConfiguracionFTP-log4j.xml</value>
			</list>
		</property>
	</bean> 
	<bean id="uidService" class="co.com.claro.financialintegrator.util.UidService" />
	<bean id="ftpClientFactory"
		class="org.springframework.integration.sftp.session.DefaultSftpSessionFactory">
		<property name="host" value="${ftpAscard.host}" />
		<property name="port" value="${ftpAscard.port}" />
		<property name="user" value="${ftpAscard.username}" />
		<property name="password" value="${ftpAscard.password}" />
		<property name="serverAliveCountMax" value="2" />
		<property name="serverAliveInterval" value="300000" />
		<property name="allowUnknownKeys" value="true" />
	</bean>
	<bean id="csfAscard"
		class="org.springframework.integration.file.remote.session.CachingSessionFactory">
		<constructor-arg ref="ftpClientFactory" />
		<constructor-arg value="${ftpAscard.maxConnection}" />
		<property name="poolSize" value="${ftpAscard.sessionCacheSize}" />
		<property name="sessionWaitTimeout" value="${ftpAscard.sessionWaitTimeout}" />
	</bean>
	<!-- BATCH COMPORTAMIENTO PAGO -->
	<int-sftp:inbound-channel-adapter id="ftpInboundComportamientoPago"
		channel="ftpComportamientoPago" session-factory="csfAscard"
		filename-regex="${ftpComportamientoPago.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpComportamientoPago.localdirectory}">
		<int:poller cron="${ftpComportamientoPago.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpComportamientoPago">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSComportamientoPago"
		session-factory="csfAscard" request-channel="ftpComportamientoPago"
		reply-channel="ftpChannelOutComportamientoPago" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutComportamientoPago">
		<int:queue />
	</int:channel>
	<!-- BATCH SALIDA ACTIVACIONES -->
	<int-sftp:inbound-channel-adapter id="ftpInboundSalidaActivaciones"
		channel="ftpChannelSalidaActivaciones" session-factory="csfAscard"
		filename-regex="${ftpSalidaActivaciones.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpSalidaActivaciones.localdirectory}">
		<int:poller cron="${ftpSalidaActivaciones.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpChannelSalidaActivaciones">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSSalidaActivaciones"
		session-factory="csfAscard" request-channel="ftpChannelSalidaActivaciones"
		reply-channel="ftpChannelOutSalidaActivaciones" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutSalidaActivaciones">
		<int:queue />
	</int:channel>
	<!-- BATCH BGH -->
	<int-sftp:inbound-channel-adapter id="ftpInboundBGH"
		channel="ftpChannelBgh" session-factory="csfAscard" filename-regex="${ftpBgh.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpBgh.localdirectory}">
		<int:poller cron="${ftpBgh.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpChannelBgh">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSBGH"
		session-factory="csfAscard" request-channel="ftpChannelBgh"
		reply-channel="ftpChannelOutBgh" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutBgh">
		<int:queue />
	</int:channel>
	<!-- BATCH RSE -->
	<int-sftp:inbound-channel-adapter id="ftpInboundRSE"
		channel="ftpChannelRse" session-factory="csfAscard" filename-regex="${ftpRse.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpRse.localdirectory}">
		<int:poller cron="${ftpRse.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpChannelRse">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSRse"
		session-factory="csfAscard" request-channel="ftpChannelRse"
		reply-channel="ftpChannelOutRse" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutRse">
		<int:queue />
	</int:channel>
	<!-- BATCH ACTUALIZACION DE SALDOS -->
	<int-sftp:inbound-channel-adapter id="ftpInboundActualizacionSaldosAscard"
		channel="ftpChannelActualizacionSaldosAscard" session-factory="csfAscard"
		filename-regex="${ftpActualizacionSaldos.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpActualizacionSaldos.localdirectory}">
		<int:poller cron="${ftpActualizacionSaldos.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpChannelActualizacionSaldosAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSActualizacionSaldosAscard"
		session-factory="csfAscard" request-channel="ftpChannelActualizacionSaldosAscard"
		reply-channel="ftpChannelOutActualizacionSaldosAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutActualizacionSaldosAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH REPORTE DE CONTABILIDAD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundReporteContabilidad"
		channel="ftpChannelReporteContabilidad" session-factory="csfAscard"
		filename-regex="${ftpReporteContabilidad.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpReporteContabilidad.localdirectory}">
		<int:poller cron="${ftpReporteContabilidad.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpChannelReporteContabilidad">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSReporteContabilidad"
		session-factory="csfAscard" request-channel="ftpChannelReporteContabilidad"
		reply-channel="ftpChannelOutRepoerteContabilidad" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutRepoerteContabilidad">
		<int:queue />
	</int:channel>
	<!-- BATCH CENTRALES DE RIESGO -->
	<int-sftp:inbound-channel-adapter id="ftpInboundCentralesRiesgo"
		channel="ftpChannelCentralesRiesgo" session-factory="csfAscard"
		filename-regex="${ftpCentralesRiesgo.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpCentralesRiesgo.localdirectory}">
		<int:poller cron="${ftpCentralesRiesgo.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpChannelCentralesRiesgo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSCentralesRiesgo"
		session-factory="csfAscard" request-channel="ftpChannelCentralesRiesgo"
		reply-channel="ftpChannelOutCentralesRiesgo" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutCentralesRiesgo">
		<int:queue />
	</int:channel>
	<!-- BATCH FRANQUICIAS ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundFranquiciasAscard"
		channel="ftpFranquiciasAscard" session-factory="csfAscard"
		filename-regex="${ftpFranquiciasAscard.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpFranquiciasAscard.localdirectory}">
		<int:poller cron="${ftpFranquiciasAscard.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpFranquiciasAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSFranquiciasAscard"
		session-factory="csfAscard" request-channel="ftpFranquiciasAscard"
		reply-channel="ftpChannelOutFranquiciasAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutFranquiciasAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH INTERFAZ CONTABLE -->
	<int-sftp:inbound-channel-adapter id="ftpInboundInterfazContable"
		channel="ftpInterfazContable" session-factory="csfAscard"
		filename-regex="${ftpInterfazContable.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpInterfazContable.localdirectory}">
		<int:poller cron="${ftpInterfazContable.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpInterfazContable">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSInterfazContable"
		session-factory="csfAscard" request-channel="ftpInterfazContable"
		reply-channel="ftpChannelOutftpInterfazContable" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutftpInterfazContable">
		<int:queue />
	</int:channel>
	<!-- BATCH SALIDA RECAUDOS ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundSalidaRecaudoAscard"
		channel="ftpSalidaRecaudoAscard" session-factory="csfAscard"
		filename-regex="${ftpSalidaRecaudoAscard.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpSalidaRecaudoAscard.localdirectory}">
		<int:poller cron="${ftpSalidaRecaudoAscard.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpSalidaRecaudoAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSSalidaRecaudoAscard"
		session-factory="csfAscard" request-channel="ftpSalidaRecaudoAscard"
		reply-channel="ftpChannelOutSalidaRecaudoAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutSalidaRecaudoAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH RESPUESTAS NODEVADES NO MONETARIAS -->
	<int-sftp:inbound-channel-adapter
		id="ftpInboundRtaNovedadesNoMonetariasAscard" channel="ftpRtaNovedadesNoMonetariasAscard"
		session-factory="csfAscard" filename-regex="${ftpRespuestaNovNomonetarias.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpRespuestaNovNomonetarias.localdirectory}">
		<int:poller cron="${ftpRespuestaNovNomonetarias.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpRtaNovedadesNoMonetariasAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway
		id="remoteftpLSRespuestasNovedadesNoMonetariasAscard" session-factory="csfAscard"
		request-channel="ftpRtaNovedadesNoMonetariasAscard" reply-channel="ftpChannelOutRtaNovedadesNoMonetariasAscard"
		command="mv" expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutRtaNovedadesNoMonetariasAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH CANCELACION SALDOS A FAVOR -->
	<int-sftp:inbound-channel-adapter
		id="ftpInboundCancelacionSaldosAFavorAscard" channel="ftpCancelacionSaldosAFavorAscard"
		session-factory="csfAscard" filename-regex="${ftpCancelacionSaldosAFavor.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpCancelacionSaldosAFavor.localdirectory}">
		<int:poller cron="${ftpCancelacionSaldosAFavor.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpCancelacionSaldosAFavorAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSCancelacionSaldosAFavorAscard"
		session-factory="csfAscard" request-channel="ftpCancelacionSaldosAFavorAscard"
		reply-channel="ftpChannelOutCancelacionSaldosAFavorAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutCancelacionSaldosAFavorAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH SALIDA AJUSTES ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundSalidaAjustesAscardAscard"
		channel="ftpGetSalidaAjustesAscardAscard" session-factory="csfAscard"
		filename-regex="${ftpSalidaAjustesAscard.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpSalidaAjustesAscard.localdirectory}">
		<int:poller cron="${ftpSalidaAjustesAscard.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetSalidaAjustesAscardAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSSalidaAjustesAscardAscard"
		session-factory="csfAscard" request-channel="ftpGetSalidaAjustesAscardAscard"
		reply-channel="ftpChannelOutSalidaAjustesAscardAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutSalidaAjustesAscardAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH SALIDA APLICACION PNAS ASC -->
	<int-sftp:inbound-channel-adapter
		id="ftpInboundSalidaAplicacionPnaAscAscard" channel="ftpGetSalidaAplicacionPnaAscAscard"
		session-factory="csfAscard" filename-regex="${ftpSalidaAplicacionPNAAsc.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpSalidaAplicacionPNAAsc.localdirectory}">
		<int:poller cron="${ftpSalidaAplicacionPNAAsc.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetSalidaAplicacionPnaAscAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSSalidaAplicacionPnaAscAscard"
		session-factory="csfAscard" request-channel="ftpGetSalidaAplicacionPnaAscAscard"
		reply-channel="ftpChannelOutSalidaAplicacionPnaAscAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutSalidaAplicacionPnaAscAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH COBRANZAS ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundCobranzasAscard"
		channel="ftpGetCobranzasAscard" session-factory="csfAscard"
		filename-regex="${ftpCobranzas.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpCobranzas.localdirectory}">
		<int:poller cron="${ftpCobranzas.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetCobranzasAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSCobranzasAscard"
		session-factory="csfAscard" request-channel="ftpGetCobranzasAscard"
		reply-channel="ftpChannelOutCobranzasAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutCobranzasAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH RESPUESTA REAPERTURA CREDITO CIERRE DE OBLIGACIONES ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundResReaperturaCreditoCierreOblAscard"
		channel="ftpGetResReaperturaCreditoCierreOblAscard" session-factory="csfAscard"
		filename-regex="${ftpResReaperturaCreditoCierreObl.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpResReaperturaCreditoCierreObl.localdirectory}">
		<int:poller cron="${ftpResReaperturaCreditoCierreObl.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetResReaperturaCreditoCierreOblAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSResReaperturaCreditoCierreOblAscard"
		session-factory="csfAscard" request-channel="ftpGetResReaperturaCreditoCierreOblAscard"
		reply-channel="ftpChannelOutResReaperturaCreditoCierreOblAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutResReaperturaCreditoCierreOblAscard">
		<int:queue />
	</int:channel>
		<!-- BATCH MEDIOS MAGNETICOS ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundMediosMagneticosAscard"
		channel="ftpGetMediosMagneticosAscard" session-factory="csfAscard"
		filename-regex="${ftpMediosMagneticos.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpMediosMagneticos.localdirectory}">
		<int:poller cron="${ftpMediosMagneticos.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetMediosMagneticosAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSMediosMagneticosAscard"
		session-factory="csfAscard" request-channel="ftpGetMediosMagneticosAscard"
		reply-channel="ftpChannelOutMediosMagneticosAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutMediosMagneticosAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH FACTURACION RR -->
	<int-sftp:inbound-channel-adapter id="ftpInboundFacturacionRRAscard"
		channel="ftpGetFacturacionRRAscard" session-factory="csfAscard"
		filename-regex="${ftpFacturacionRR.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpFacturacionRR.localdirectory}">
		<int:poller cron="${ftpFacturacionRR.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetFacturacionRRAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSFacturacionRRAscard"
		session-factory="csfAscard" request-channel="ftpGetFacturacionRRAscard"
		reply-channel="ftpChannelOutFacturacionRRAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutFacturacionRRAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH CONTABILIDAD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundContabilidadBscsAscard"
		channel="ftpGetContabilidadBscsAscard" session-factory="csfAscard"
		filename-regex="${ftpContabilidad.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpContabilidad.localdirectory}">
		<int:poller cron="${ftpContabilidad.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetContabilidadBscsAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSContabilidadBscsAscard"
		session-factory="csfAscard" request-channel="ftpGetContabilidadBscsAscard"
		reply-channel="ftpChannelOutContabilidadBscsAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutContabilidadBscsAscard">
		<int:queue />
	</int:channel>	
	<!-- BATCH ENDUADAMIENTO ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundEndeudamientoAscard"
		channel="ftpGetEndeudamientoAscard" session-factory="csfAscard"
		filename-regex="${ftpEnduadamiento.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpEnduadamiento.localdirectory}">
		<int:poller cron="${ftpEnduadamiento.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetEndeudamientoAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSEndeudamientoAscard"
		session-factory="csfAscard" request-channel="ftpGetEndeudamientoAscard"
		reply-channel="ftpChannelOutEndeudamientoAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutEndeudamientoAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH CONSULTA USUARIOS OIM ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundConsultaUsuariosOIMAscard"
		channel="ftpGetConsultaUsuariosOIMAscard" session-factory="csfAscard"
		filename-regex="${ftpConsultaUsuarios.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpConsultaUsuarios.localdirectory}">
		<int:poller cron="${ftpConsultaUsuarios.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetConsultaUsuariosOIMAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSConsultaUsuariosOIMAscard"
		session-factory="csfAscard" request-channel="ftpGetConsultaUsuariosOIMAscard"
		reply-channel="ftpChannelOutConsultaUsuariosOIMAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutConsultaUsuariosOIMAscard">
		<int:queue />
	</int:channel>	
	<!-- BATCH SALIDA ANULACION BANCOS ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundSalidaAnulacionBancosAscard"
		channel="ftpGetSalidaAnulacionBancosAscard" session-factory="csfAscard"
		filename-regex="${ftpSalidaAnulacionBancos.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpSalidaAnulacionBancos.localdirectory}">
		<int:poller cron="${ftpSalidaAnulacionBancos.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetSalidaAnulacionBancosAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSSalidaAnulacionBancosAscard"
		session-factory="csfAscard" request-channel="ftpGetSalidaAnulacionBancosAscard"
		reply-channel="ftpChannelOutSalidaAnulacionBancosAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutSalidaAnulacionBancosAscard">
		<int:queue />
	</int:channel>	
	<!-- BATCH SALIDA ANULACION SICACOM ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundSalidaAnulacionSicacomAscard"
		channel="ftpGetSalidaAnulacionSicacomAscard" session-factory="csfAscard"
		filename-regex="${ftpSalidaAnulacionSicacom.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpSalidaAnulacionSicacom.localdirectory}">
		<int:poller cron="${ftpSalidaAnulacionSicacom.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetSalidaAnulacionSicacomAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSSalidaAnulacionSicacomAscard"
		session-factory="csfAscard" request-channel="ftpGetSalidaAnulacionSicacomAscard"
		reply-channel="ftpChannelOutSalidaAnulacionSicacomAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutSalidaAnulacionSicacomAscard">
		<int:queue />
	</int:channel>		
	<!-- BATCH SALIDA ANULACION RECAUDO RR -->
	<int-sftp:inbound-channel-adapter id="ftpInboundSalidaAnulacionRecaudoRRAscard"
		channel="ftpGetSalidaAnulacionRecaudoRRAscard" session-factory="csfAscard"
		filename-regex="${ftpSalidaAnulacionRecaudoRR.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpSalidaAnulacionRecaudoRR.localdirectory}">
		<int:poller cron="${ftpSalidaAnulacionRecaudoRR.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetSalidaAnulacionRecaudoRRAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSSalidaAnulacionRecaudoRRAscard"
		session-factory="csfAscard" request-channel="ftpGetSalidaAnulacionRecaudoRRAscard"
		reply-channel="ftpChannelOutSalidaAnulacionRecaudoRRAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutSalidaAnulacionRecaudoRRAscard">
		<int:queue />
	</int:channel>		
	<!-- BATCH METRICAS ASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundMetricasAscard"
		channel="ftpGetMetricasAscard" session-factory="csfAscard"
		filename-regex="${ftpMetricasAscard.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpMetricasAscard.localdirectory}">
		<int:poller cron="${ftpMetricasAscard.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetMetricasAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSMetricasAscard"
		session-factory="csfAscard" request-channel="ftpGetMetricasAscard"
		reply-channel="ftpChannelOutMetricasAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutMetricasAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH REPORTE ANULACION PAGOS -->
<!-- 	<int-sftp:inbound-channel-adapter id="ftpInboundReporteAnulacionPagos" -->
<!-- 		channel="ftpGetReporteAnulacionPagos" session-factory="csfAscard" -->
<!-- 		filename-regex="${ftpReporteAnulacionPagos.filenamePattern}" -->
<!-- 		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}" -->
<!-- 		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing" -->
<!-- 		local-directory="${ftpReporteAnulacionPagos.localdirectory}"> -->
<!-- 		<int:poller cron="${ftpReporteAnulacionPagos.cronExpressionInboud}" -->
<!-- 			max-messages-per-poll="-1" /> -->
<!-- 	</int-sftp:inbound-channel-adapter> -->
<!-- 	<int:channel id="ftpGetReporteAnulacionPagos"> -->
<!-- 		<int:queue /> -->
<!-- 	</int:channel> -->
<!-- 	<int-sftp:outbound-gateway id="remoteftpLSReporteAnulacionPagos" -->
<!-- 		session-factory="csfAscard" request-channel="ftpGetReporteAnulacionPagos" -->
<!-- 		reply-channel="ftpChannelOutReporteAnulacionPagos" command="mv" -->
<!-- 		expression="'${ftpAscard.remotedirectory}'+payload.getName()" -->
<!-- 		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'"> -->
<!-- 		<int:poller fixed-rate="1000" max-messages-per-poll="-1" /> -->
<!-- 	</int-sftp:outbound-gateway> -->
<!-- 	<int:channel id="ftpChannelOutReporteAnulacionPagos"> -->
<!-- 		<int:queue /> -->
<!-- 	</int:channel>	 -->
	<!-- BATCH APLICACION PAGOS BSCS -->
	<int-sftp:inbound-channel-adapter id="ftpInboundAplicacionPagosBscsAscard"
		channel="ftpGetAplicacionPagosBscsAscard" session-factory="csfAscard"
		filename-regex="${ftpAplicacionPagoBSCS.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpAplicacionPagoBSCS.localdirectory}">
		<int:poller cron="${ftpAplicacionPagoBSCS.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetAplicacionPagosBscsAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSAplicacionPagosBscsAscard"
		session-factory="csfAscard" request-channel="ftpGetAplicacionPagosBscsAscard"
		reply-channel="ftpChannelOutAplicacionPagosBscsAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutAplicacionPagosBscsAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH SALIDA AJUSTES FIJAASCARD -->
	<int-sftp:inbound-channel-adapter id="ftpInboundSalidaAjustesFijaAscardAscard"
		channel="ftpGetSalidaAjustesFijaAscardAscard" session-factory="csfAscard"
		filename-regex="${ftpSalidaAjustesFijaAscard.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpSalidaAjustesFijaAscard.localdirectory}">
		<int:poller cron="${ftpSalidaAjustesFijaAscard.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetSalidaAjustesFijaAscardAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSSalidaAjustesFijaAscardAscard"
		session-factory="csfAscard" request-channel="ftpGetSalidaAjustesFijaAscardAscard"
		reply-channel="ftpChannelOutSalidaAjustesFijaAscardAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutSalidaAjustesFijaAscardAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH Cierre Obligaciones -->
	<int-sftp:inbound-channel-adapter id="ftpInboundCierreObligacionesAscard"
		channel="ftpGetCierreObligacionesAscard" session-factory="csfAscard"
		filename-regex="${ftpCierreObligaciones.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpCierreObligaciones.localdirectory}">
		<int:poller cron="${ftpCierreObligaciones.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetCierreObligacionesAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLCierreObligacionesAscard"
		session-factory="csfAscard" request-channel="ftpGetCierreObligacionesAscard"
		reply-channel="ftpChannelOutCierreObligacionesAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutCierreObligacionesAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH INFORMACION PRECIOS DIGITALES --> 
	<int-sftp:inbound-channel-adapter id="ftpInboundIcnformacionPreciosDigitalesAscard"
		channel="ftpGetInformacionPreciosDigitalesAscard" session-factory="csfAscard"
		filename-regex="${ftpInformacionPreciosDigitales.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpInformacionPreciosDigitales.localdirectory}">
		<int:poller cron="${ftpInformacionPreciosDigitales.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetInformacionPreciosDigitalesAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSInformacionPreciosDigitalesAscard"
		session-factory="csfAscard" request-channel="ftpGetInformacionPreciosDigitalesAscard"
		reply-channel="ftpChannelOutInformacionPreciosDigitalesAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutInformacionPreciosDigitalesAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH PROMOCION ASCARD -->  
	<int-sftp:inbound-channel-adapter id="ftpInboundPromocionAscardAscard"
		channel="ftpGetPromocionAscardAscard" session-factory="csfAscard"
		filename-regex="${ftpPromocionAscard.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpPromocionAscard.localdirectory}">
		<int:poller cron="${ftpPromocionAscard.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetPromocionAscardAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSPromocionAscardAscard"
		session-factory="csfAscard" request-channel="ftpGetPromocionAscardAscard"
		reply-channel="ftpChannelOutPromocionAscardAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutPromocionAscardAscard">
		<int:queue />
	</int:channel>
	<!-- BATCH CUOTAS GRATIS  -->
	<int-sftp:inbound-channel-adapter id="ftpInboundCuotasGratisAscard"
		channel="ftpGetCuotasGratisAscard" session-factory="csfAscard"
		filename-regex="${ftpCuotasGratis.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpCuotasGratis.localdirectory}">
		<int:poller cron="${ftpCuotasGratis.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetCuotasGratisAscard">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSCuotasGratisAscard"
		session-factory="csfAscard" request-channel="ftpGetCuotasGratisAscard"
		reply-channel="ftpChannelOutCuotasGratisAscard" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutCuotasGratisAscard">
		<int:queue />
	</int:channel>
		<!-- BATCH REVERSOS DE PAGO -->
	<int-sftp:inbound-channel-adapter id="ftpInboundReversosdePago"
		channel="ftpChannelReversosdePago" session-factory="csfAscard"
		filename-regex="${ftpReversosDePago.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpReversosDePago.localdirectory}">
		<int:poller cron="${ftpReversosDePago.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpChannelReversosdePago">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSReversosdePago"
		session-factory="csfAscard" request-channel="ftpChannelReversosdePago"
		reply-channel="ftpChannelOutReversosdePago" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutReversosdePago">
		<int:queue />
	</int:channel>	
	
	
	<!-- BATCH CICLO FACTURACION -->
	<int-sftp:inbound-channel-adapter id="ftpInboundCiclosFacturacion"
		channel="ftpChannelCiclosFacturacion" session-factory="csfAscard"
		filename-regex="${ftpCiclosFacturacion.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpCiclosFacturacion.localdirectory}">
		<int:poller cron="${ftpCiclosFacturacion.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpChannelCiclosFacturacion">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSCicloFacturacion"
		session-factory="csfAscard" request-channel="ftpChannelCiclosFacturacion"
		reply-channel="ftpChannelOutCiclosFacturacion" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutCiclosFacturacion">
		<int:queue />
	</int:channel>			
	
	
	<!-- BATCH CREDITO DIGITAL -->
	<int-sftp:inbound-channel-adapter id="ftpInboundCreditoDigital"
		channel="ftpChannelCreditoDigital" session-factory="csfAscard"
		filename-regex="${ftpCreditoDigital.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpCreditoDigital.localdirectory}">
		<int:poller cron="${ftpCreditoDigital.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpChannelCreditoDigital">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSCreditoDigital"
		session-factory="csfAscard" request-channel="ftpChannelCreditoDigital"
		reply-channel="ftpChannelOutCreditoDigital" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutCreditoDigital">
		<int:queue />
	</int:channel>


	<!-- BATCH CAMBIO TASAS INTERES -->
	<int-sftp:inbound-channel-adapter id="ftpInboundCambioTasasInteres"
		channel="ftpChannelCambioTasasInteres" session-factory="csfAscard"
		filename-regex="${ftpCambioTasasInteres.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpCambioTasasInteres.localdirectory}">
		<int:poller cron="${ftpCambioTasasInteres.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpChannelCambioTasasInteres">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSCicloFacturacion"
		session-factory="csfAscard" request-channel="ftpChannelCambioTasasInteres"
		reply-channel="ftpChannelOutCambioTasasInteres" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutCambioTasasInteres">
		<int:queue />
	</int:channel>


	<!-- BATCH CARGUE MASIVO -->
	<int-sftp:inbound-channel-adapter id="ftpInboundCargueMasivo"
		channel="ftpChannelCargueMasivo" session-factory="csfAscard"
		filename-regex="${ftpCargueMasivo.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpCargueMasivo.localdirectory}">
		<int:poller cron="${ftpCargueMasivo.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpChannelCargueMasivo">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSCargueMasivo"
		session-factory="csfAscard" request-channel="ftpChannelCargueMasivo"
		reply-channel="ftpChannelOutCargueMasivo" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutCargueMasivo">
		<int:queue />
	</int:channel>
	
	<!-- BATCH REPORTE FACTURACION -->
	<int-sftp:inbound-channel-adapter id="ftpInboundReporteFacturacion"
		channel="ftpChannelReporteFacturacion" session-factory="csfAscard"
		filename-regex="${ftpReporteFacturacion.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpReporteFacturacion.localdirectory}">
		<int:poller cron="${ftpReporteFacturacion.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpChannelReporteFacturacion">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSReporteFacturacion"
		session-factory="csfAscard" request-channel="ftpChannelReporteFacturacion"
		reply-channel="ftpChannelOutReporteFacturacion" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutReporteFacturacion">
		<int:queue />
	</int:channel>
	
	
	<!-- BATCH REPORTE TASAS DE INTERES -->
	<int-sftp:inbound-channel-adapter id="ftpInboundReporteTasasInteres"
		channel="ftpChannelReporteTasasInteres" session-factory="csfAscard"
		filename-regex="${ftpReporteTasasInteres.filenamePattern}"
		auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
		remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
		local-directory="${ftpReporteTasasInteres.localdirectory}">
		<int:poller cron="${ftpReporteTasasInteres.cronExpressionInboud}"
			max-messages-per-poll="-1" />
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpChannelReporteTasasInteres">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-gateway id="remoteftpLSReporteTasasInteres"
		session-factory="csfAscard" request-channel="ftpChannelReporteTasasInteres"
		reply-channel="ftpChannelOutReporteTasasInteres" command="mv"
		expression="'${ftpAscard.remotedirectory}'+payload.getName()"
		rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />
	</int-sftp:outbound-gateway>
	<int:channel id="ftpChannelOutReporteTasasInteres">
		<int:queue />
	</int:channel>
    
    <!-- BATCH RESPUESTA CREDITOS CASTIGADOS -->
    <int-sftp:inbound-channel-adapter id="ftpInboundRespuestaCreditosCastigados"
        channel="ftpChannelRespuestaCreditosCastigados" session-factory="csfAscard"
        filename-regex="${ftpRespuestaCreditosCastigados.filenamePattern}"
        auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
        remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
        local-directory="${ftpRespuestaCreditosCastigados.localdirectory}">
        <int:poller cron="${ftpRespuestaCreditosCastigados.cronExpressionInboud}"
            max-messages-per-poll="-1" />
    </int-sftp:inbound-channel-adapter>
    <int:channel id="ftpChannelRespuestaCreditosCastigados">
        <int:queue />
    </int:channel>
    <int-sftp:outbound-gateway id="remoteftpLSRespuestaCreditosCastigados"
        session-factory="csfAscard" request-channel="ftpChannelRespuestaCreditosCastigados"
        reply-channel="ftpChannelOutRespuestaCreditosCastigados" command="mv"
        expression="'${ftpAscard.remotedirectory}'+payload.getName()"
        rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
        <int:poller fixed-rate="1000" max-messages-per-poll="-1" />
    </int-sftp:outbound-gateway>
    <int:channel id="ftpChannelOutRespuestaCreditosCastigados">
        <int:queue />
    </int:channel>

    <!-- BATCH RESPUESTA APERTURA CREDITOS CASTIGADOS -->
    <int-sftp:inbound-channel-adapter id="ftpInboundRespuestaAperturaCreditosCastigados"
        channel="ftpChannelRespuestaAperturaCreditosCastigados" session-factory="csfAscard"
        filename-regex="${ftpRespuestaAperturaCreditosCastigados.filenamePattern}"
        auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
        remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
        local-directory="${ftpRespuestaAperturaCreditosCastigados.localdirectory}">
        <int:poller cron="${ftpRespuestaAperturaCreditosCastigados.cronExpressionInboud}"
            max-messages-per-poll="-1" />
    </int-sftp:inbound-channel-adapter>
    <int:channel id="ftpChannelRespuestaAperturaCreditosCastigados">
        <int:queue />
    </int:channel>
    <int-sftp:outbound-gateway id="remoteftpLSRespuestaAperturaCreditosCastigados"
        session-factory="csfAscard" request-channel="ftpChannelRespuestaAperturaCreditosCastigados"
        reply-channel="ftpChannelOutRespuestaAperturaCreditosCastigados" command="mv"
        expression="'${ftpAscard.remotedirectory}'+payload.getName()"
        rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
        <int:poller fixed-rate="1000" max-messages-per-poll="-1" />
    </int-sftp:outbound-gateway>
    <int:channel id="ftpChannelOutRespuestaAperturaCreditosCastigados">
        <int:queue />
    </int:channel>

    <!-- BATCH AUDITORIA SOX RESp -->
    <int-sftp:inbound-channel-adapter id="ftpInboundAuditoriaSOX"
        channel="ftpChannelAuditoriaSOX" session-factory="csfAscard"
        filename-regex="${ftpAuditoriaSOX.filenamePattern}"
        auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
        remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
        local-directory="${ftpAuditoriaSOX.localdirectory}">
    <int:poller cron="${ftpAuditoriaSOX.cronExpressionInboud}"
            max-messages-per-poll="-1" />
    </int-sftp:inbound-channel-adapter>
    <int:channel id="ftpChannelAuditoriaSOX">
        <int:queue />
    </int:channel>
    <int-sftp:outbound-gateway id="remoteftpLSAuditoriaSOX"
        session-factory="csfAscard" request-channel="ftpChannelAuditoriaSOX"
        reply-channel="ftpChannelOutAuditoriaSOX" command="mv"
        expression="'${ftpAscard.remotedirectory}'+payload.getName()"
        rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
        <int:poller fixed-rate="1000" max-messages-per-poll="-1" />
    </int-sftp:outbound-gateway>
    <int:channel id="ftpChannelOutAuditoriaSOX">
        <int:queue />
    </int:channel>

    <!-- BATCH CONSULTA USR -->
    <int-sftp:inbound-channel-adapter id="ftpInboundConsultaUsr"
        channel="ftpChannelConsultaUsr" session-factory="csfAscard"
        filename-regex="${ftpConsultaUsr.filenamePattern}"
        auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
        remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
        local-directory="${ftpConsultaUsr.localdirectory}">
        <int:poller cron="${ftpConsultaUsr.cronExpressionInboud}"
            max-messages-per-poll="-1" />
    </int-sftp:inbound-channel-adapter>
    <int:channel id="ftpChannelConsultaUsr">
        <int:queue />
    </int:channel>
    <int-sftp:outbound-gateway id="remoteftpLSConsultaUsr"
        session-factory="csfAscard" request-channel="ftpChannelConsultaUsr"
        reply-channel="ftpChannelOutConsultaUsr" command="mv"
        expression="'${ftpAscard.remotedirectory}'+payload.getName()"
        rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
        <int:poller fixed-rate="1000" max-messages-per-poll="-1" />
    </int-sftp:outbound-gateway>
    <int:channel id="ftpChannelOutConsultaUsr">
        <int:queue />
    </int:channel>

    <!-- BATCH DESGLOSE DE PAGOS  -->
    <int-sftp:inbound-channel-adapter id="ftpInboundDesglosePagos"
        channel="ftpChannelDesglosePagos" session-factory="csfAscard"
        filename-regex="${ftpDesglosePagos.filenamePattern}"
        auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
        remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
        local-directory="${ftpDesglosePagos.localdirectory}">
        <int:poller cron="${ftpDesglosePagos.cronExpressionInboud}"
            max-messages-per-poll="-1" />
    </int-sftp:inbound-channel-adapter>
    <int:channel id="ftpChannelDesglosePagos">
        <int:queue />
    </int:channel>
    <int-sftp:outbound-gateway id="remoteftpLSDesglosePagos"
        session-factory="csfAscard" request-channel="ftpChannelDesglosePagos"
        reply-channel="ftpChannelOutDesglosePagos" command="mv"
        expression="'${ftpAscard.remotedirectory}'+payload.getName()"
        rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
        <int:poller fixed-rate="1000" max-messages-per-poll="-1" />
    </int-sftp:outbound-gateway>
    <int:channel id="ftpChannelOutDesglosePagos">
        <int:queue />
    </int:channel>	
    
    <!-- BATCH TASAS DE CREDITO-->
    <int-sftp:inbound-channel-adapter id="ftpInboundTasaCredito"
        channel="ftpChannelTasaCredito" session-factory="csfAscard"
        filename-regex="${ftpTasaCredito.filenamePattern}"
        auto-create-local-directory="true" delete-remote-files="${ftpAscard.deleteRemoteFile}"
        remote-directory="${ftpAscard.remotedirectory}" temporary-file-suffix=".writing"
        local-directory="${ftpTasaCredito.localdirectory}">
        <int:poller cron="${ftpTasaCredito.cronExpressionInboud}"
            max-messages-per-poll="-1" />
    </int-sftp:inbound-channel-adapter>
    <int:channel id="ftpChannelTasaCredito">
        <int:queue />
    </int:channel>
    <int-sftp:outbound-gateway id="remoteftpLSTasaCredito"
        session-factory="csfAscard" request-channel="ftpChannelTasaCredito"
        reply-channel="ftpChannelOutTasaCredito" command="mv"
        expression="'${ftpAscard.remotedirectory}'+payload.getName()"
        rename-expression="'${ftpAscard.remotedirectoryCopy}'+payload.getName()+'_#{ T(java.lang.System).currentTimeMillis() }'+'_process'">
        <int:poller fixed-rate="1000" max-messages-per-poll="-1" />
    </int-sftp:outbound-gateway>
    <int:channel id="ftpChannelOutTasaCredito">
        <int:queue />
    </int:channel>

</beans>