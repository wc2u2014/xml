<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:xsd/spring-beans-4.0.xsd
                            http://www.springframework.org/schema/context classpath:xsd/spring-context-4.0.xsd">

 <!-- 	 <context:property-placeholder
		ignore-resource-not-found="true"
		location="file:/u01/Admin/applications/config/CO_FINEQUIPOS_OSB_PR/config/SalidaActivacionesBackEnd/SalidaActivacionesBackEnd.properties" />
 <bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>file:/u01/Admin/applications/config/CO_FINEQUIPOS_OSB_PR/config/SalidaActivacionesBackEnd/SalidaActivacionesBackEnd-log4j.xml</value>
			</list>
		</property>
	</bean> --> 
  <context:property-placeholder
		ignore-resource-not-found="true"
		location="file:${PATH_PROPERTIES_INTEGRATOR}/SalidaActivacionesBackEnd/SalidaActivacionesBackEnd.properties" />
 <bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>file:${PATH_PROPERTIES_INTEGRATOR}/SalidaActivacionesBackEnd/SalidaActivacionesBackEnd-log4j.xml</value>
			</list>
		</property>
	</bean>
<bean name="genericProccess" class="co.com.claro.financialintegrator.implement.SalidaActivacionesBackEnd"> 	
 	
 	<property name="pros">
 		<props>
 			<prop key="path">${file.pathProccess}</prop>
 			<prop key="fileProccess">${file.fileProccess}</prop>
 			<prop key="ExtfileProcess">${file.ExtfileProcess}</prop>
 			<prop key="WSLRegistrarIntegradorAddress">${wsdl.WSLRegistrarIntegradorAddress}</prop>
 			<prop key="WSLRegistrarIntegradorPagoTimeOut">${wsdl.WSLRegistrarIntegradorPagoTimeOut}</prop>
 			<prop key="WSLAuditoriaBatchPagoTimeOut">${wsdl.WSLAuditoriaBatchPagoTimeOut}</prop>
 			<prop key="WSLAuditoriaBatchAddress">${wsdl.WSLAuditoriaBatchAddress}</prop>
 			<prop key="WSLRegistrarTicklerAddress">${wsdl.WSLRegistrarTicklerAddress}</prop>
 			<prop key="WSLRegistrarTicklerPagoTimeOut">${wsdl.WSLRegistrarTicklerPagoTimeOut}</prop> 					
 			<prop key="VCTICCODE">${tickler.VCTICCODE}</prop>
 			<prop key="VCX">${tickler.VCX}</prop>
 			<prop key="VCY">${tickler.VCY}</prop>
 			<prop key="VCSH">${tickler.VCSH}</prop>
 			<prop key="VCUPDATE">${tickler.VCUPDATE}</prop>
 			<prop key="usuarioDefault">${usuario.usuarioDefault}</prop>
 			<prop key="BatchName">SalidaActivacionesBackEnd</prop>
 		</props>
 	</property>
 </bean>
 <bean name="complexJobDetail"    class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="co.com.claro.financialintegrator.spring.quartz.ScheduledJob" />
        <property name="jobDataMap">
            <map>
                <entry key="genericProccess" value-ref="genericProccess" />
            </map>
        </property>
        <property name="durability" value="true" />
    </bean>
  
    <!-- Run the job every 5 seconds only on Weekends -->
    <bean id="cronTrigger"  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="complexJobDetail" />
        <property name="cronExpression" value="${quartz.cronExpression}" />
    </bean>
    <!-- Scheduler factory bean to glue together jobDetails and triggers to Configure Quartz Scheduler -->
    <bean  class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobDetails">
            <list>                
                <ref bean="complexJobDetail" />
            </list>
        </property>
 
        <property name="triggers">
            <list>               
                <ref bean="cronTrigger" />
            </list>
        </property>
    </bean>   		
</beans>  