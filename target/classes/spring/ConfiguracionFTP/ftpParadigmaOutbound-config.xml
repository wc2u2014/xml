<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-sftp="http://www.springframework.org/schema/integration/sftp"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:xsd/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context classpath:xsd/spring-context-4.0.xsd
		http://www.springframework.org/schema/integration/sftp   classpath:xsd/spring-integration-sftp.xsd
		http://www.springframework.org/schema/util classpath:xsd/spring-util-3.0.xsd">

   <context:property-placeholder
		ignore-resource-not-found="true"
		location="file:${PATH_PROPERTIES_INTEGRATOR}/ConfiguracionFTP/ConfiguracionFTP.properties" />
	<bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" lazy-init="false">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>file:${PATH_PROPERTIES_INTEGRATOR}/ConfiguracionFTP/ConfiguracionFTP-log4j.xml</value>
			</list>
		</property>
	</bean> 
	<bean id="ftpClientFactoryParadigmaOutput" class="org.springframework.integration.sftp.session.DefaultSftpSessionFactory">	
		<property name="host" value="${ftpParadigma.host}"/>
		<property name="port" value="${ftpParadigma.port}"/>
		<property name="user" value="${ftpParadigma.username}"/>	
		<property name="password" value="${ftpParadigma.password}"/>
	</bean>
	<bean id="csfParadigmaOutput" class="org.springframework.integration.file.remote.session.CachingSessionFactory">
		<constructor-arg ref="ftpClientFactoryParadigmaOutput" />		
		<property name="poolSize" value="${ftpParadigmaOutbound.sessionCacheSize}" />
		<property name="sessionWaitTimeout" value="${ftpParadigmaOutbound.sessionWaitTimeout}" />
	</bean>	
	<!-- BATCH ACTIVACIONES COPY -->  
	<int-sftp:inbound-channel-adapter id="ftpInboundParadigma"
				channel="ftpGetChannelParadigma"
				session-factory="csfParadigmaOutput"	
				filename-pattern="*.NOPROCESSXX"		
				remote-directory="${ftpParadigma.remotedirectory}"				
				local-directory="${ftpParadigma.localprocess}">
		<int:poller cron="${ftpParadigma.cronExpressionOutbound}" max-messages-per-poll="-1"/>		
	</int-sftp:inbound-channel-adapter>
	<int:channel id="ftpGetChannelParadigma">
		<int:queue />
	</int:channel>
	<int-sftp:outbound-channel-adapter  id="ftpOutboundParadigma"
				channel="ftpGetChannelParadigma"				
				remote-directory="${ftpParadigma.remotedirectory}"				
				session-factory="csfParadigmaOutput"				
				order="1" >	
		<int-sftp:request-handler-advice-chain>
			<int:retry-advice />
			 <bean class="org.springframework.integration.handler.advice.ExpressionEvaluatingRequestHandlerAdvice">
				<property name="onSuccessExpression" value="payload.delete()" />
	      	 </bean>			
		</int-sftp:request-handler-advice-chain>	
		<int:poller fixed-rate="1000" max-messages-per-poll="-1" />		
	</int-sftp:outbound-channel-adapter>
</beans>